/* eslint-disable */
import Roles from '../../utils/auth/Roles'
import hasher from '../../utils/hasher/BcryptjsHasher'

type TAdminProps = {
  ADMIN_NAME: string | undefined
  ADMIN_EMAIL: string | undefined
  ADMIN_PASSWORD: string | undefined
}

function getAdminProps(): TAdminProps {
  const adminProps: TAdminProps = {
    ADMIN_NAME: process.env.ADMIN_NAME,
    ADMIN_EMAIL: process.env.ADMIN_EMAIL,
    ADMIN_PASSWORD: process.env.ADMIN_PASSWORD,
  }

  for (const key in adminProps) {
    if (adminProps[key as keyof TAdminProps] === undefined) {
      throw new Error(key + ' environment variable not set on .env.')
    }
  }

  return adminProps
}

type TAdminUser = {
  name: string
  email: string
  passwordHash: string
  admin: {} // TODO: fix this and remove eslint disable from top.
  roles: {}
}

async function admin(): Promise<TAdminUser> {
  const adminProps: TAdminProps = getAdminProps()

  const passwordHash = await hasher.hashAsync(
    adminProps.ADMIN_PASSWORD as string
  )

  /* This is a transactional create
  https://www.prisma.io/docs/concepts/components/prisma-client/transactions#nested-writes */
  return {
    name: adminProps.ADMIN_NAME as string,
    email: adminProps.ADMIN_EMAIL as string,
    passwordHash,
    admin: {
      create: {
        /** All props are auto-generated by prisma */
      },
    },
    roles: {
      connect: {
        id: Roles.ADMIN,
      },
    },
  }
}

export default admin
